{
    "openapi": "3.0.0",
    "info": {
        "title": "Smart Task API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local"
        }
    ],
    "paths": {
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user.",
                "operationId": "25751c40a55442e855a5db0257f3e0ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mubarak ismail"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "mubarak1@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|tokenstring..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login and get a token.",
                "operationId": "ccce227a6532e9aa9166893b0a10946a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "mubarak1@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user logged successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|tokenstring..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout current user.",
                "operationId": "16518d98e370a15ebf10146f70441e39",
                "responses": {
                    "200": {
                        "description": "Logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user logout successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/statuses": {
            "get": {
                "tags": [
                    "Statuses"
                ],
                "summary": "List statuses",
                "description": "List all statuses (optionally paginated).",
                "operationId": "922910d4329c1f061b00f2332fee96ef",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Enable pagination by setting per_page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Optional name filter (implementation-specific)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "name:TO DO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Statuses retrieved successfully."
                                        },
                                        "meta": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/PaginatedMeta"
                                                }
                                            ],
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks",
                "description": "List all tasks (optionally paginated & searchable).",
                "operationId": "b24cc2a90d70a5ec8900812aca06977a",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Enable pagination by setting per_page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter by title using format: title:{text}",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "title:testing t1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Task"
                                                    }
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Tasks retrieved successfully."
                                                },
                                                "meta": {
                                                    "$ref": "#/components/schemas/PaginatedMeta"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Task"
                                                    }
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Tasks retrieved successfully."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create task",
                "description": "Create a task.",
                "operationId": "81aa9aec3637a0173c7ce78fd5f34eb2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "status_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Hacking Website X"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Testing Store Endpoint",
                                        "nullable": true
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Show task",
                "description": "Get a single task by ID.",
                "operationId": "657c0ca774fe1a3fb6c987735c4e07f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task",
                "description": "Update a task (partial or full).",
                "operationId": "2f364e8da7f2f7e1b6995079de7a9b71",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Hacking Website X"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Hacking done successfully"
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found."
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "description": "Delete a task.\n\nNOTE: Postman collection returns 200 with body, not 204.",
                "operationId": "a05e1b91f82bf60a25e1a3f1fdf8dcff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}/assign": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Assign task",
                "description": "Assign a task to a user.",
                "operationId": "d0451cc2852a6cc7eb73c8d30d1ff715",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "assignee_id"
                                ],
                                "properties": {
                                    "assignee_id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task assigned successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found."
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}/change-status": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Change task status",
                "description": "Change task status.\n\nNOTE: Path matches Postman: /change-status",
                "operationId": "331d22b26617a01805339716174c0c3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status_id"
                                ],
                                "properties": {
                                    "status_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task status changed successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found."
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}/restore": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Restore task",
                "description": "Restore a soft-deleted task.",
                "operationId": "522ead70c91fa04ec3c64e9d75ff09a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task restored successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StatusSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "In Progress"
                    },
                    "code": {
                        "type": "string",
                        "example": "INPR"
                    },
                    "order": {
                        "type": "integer",
                        "example": 2
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-24T10:05:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-24T10:05:00Z"
                    }
                },
                "type": "object"
            },
            "StatusesPaginatedMeta": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "total": {
                        "type": "integer",
                        "example": 3
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UserMini": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 4
                    },
                    "name": {
                        "type": "string",
                        "example": "ahmed mohamed"
                    },
                    "email": {
                        "type": "string",
                        "example": "ahmed@gmail.com"
                    }
                },
                "type": "object"
            },
            "TaskStatus": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "code": {
                        "type": "string",
                        "example": "INPR"
                    },
                    "name": {
                        "type": "string",
                        "example": "In Progress"
                    }
                },
                "type": "object"
            },
            "Task": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "title": {
                        "type": "string",
                        "example": "Hacking Website X"
                    },
                    "description": {
                        "type": "string",
                        "example": "Testing Store Endpoint",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatus"
                    },
                    "assignee": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/UserMini"
                            }
                        ],
                        "nullable": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/UserMini"
                    },
                    "priority": {
                        "type": "integer",
                        "example": 3
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-23T15:37:08+00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-23T15:49:06+00:00"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The title field is required."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "title": [
                                "The title field is required."
                            ]
                        },
                        "additionalProperties": {
                            "schema": "TaskController",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "TaskController": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "PaginatedMeta": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "total": {
                        "type": "integer",
                        "example": 2
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 2
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://127.0.0.1:8000/api/v1/tasks?per_page=1&page=2",
                        "nullable": true
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Status": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "To Do"
                    },
                    "code": {
                        "type": "string",
                        "example": "to-do"
                    },
                    "order": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-24T10:05:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-24T10:05:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Mubarak ismail"
                    },
                    "email": {
                        "type": "string",
                        "example": "Mubarak1@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-24T10:05:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-24T10:05:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication endpoints"
        },
        {
            "name": "Statuses",
            "description": "Task statuses (lookup) endpoints"
        },
        {
            "name": "Tasks",
            "description": "Task management endpoints"
        }
    ]
}