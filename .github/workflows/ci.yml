name: CI / CD

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_USER: ${{ secrets.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
        ports:
          - 3306:3306

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          extensions: mbstring, intl, zip, pcntl, pdo_mysql, redis
          coverage: xdebug

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Write .env for CI
        run: |
          cat > .env <<'ENV'
          APP_NAME=SmartTasks
          APP_ENV=testing
          APP_DEBUG=true
          APP_URL=http://localhost

          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          CACHE_DRIVER=redis
          SESSION_DRIVER=redis
          QUEUE_CONNECTION=redis
          REDIS_HOST=127.0.0.1
          REDIS_PORT=6379
          ENV

      - name: Generate key & clear config
        run: |
          php artisan key:generate
          php artisan config:clear

      - name: Wait for DB (laravel user)
        run: |
          for i in {1..60}; do
            mysql -h 127.0.0.1 -u "${{ secrets.DB_USERNAME }}" -p"${{ secrets.DB_PASSWORD }}" -e "SELECT 1" && exit 0
            echo "Waiting for MySQL... ($i/60)"; sleep 2
          done
          echo "MySQL did not become ready in time" >&2
          exit 1

      - name: Migrate & seed
        run: php artisan migrate --seed --force

      - name: Run PHPUnit (with coverage)
        run: php artisan test --coverage-clover=coverage.xml

      - name: Generate Swagger (OpenAPI)
        run: php artisan l5-swagger:generate

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.php }}
          path: coverage.xml

      - name: Upload Swagger JSON/HTML
        uses: actions/upload-artifact@v4
        with:
          name: swagger-docs-${{ matrix.php }}
          path: public/docs
