name: CI / CD

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: smart_task_api
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u laravel -plaravel"
          --health-interval=5s --health-timeout=5s --health-retries=30
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=5s --health-timeout=5s --health-retries=30

    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          extensions: mbstring, intl, zip, pcntl, pdo_mysql, redis
          coverage: xdebug

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ matrix.php }}-

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Copy environment
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Wait for DB (laravel user)
        run: |
          for i in {1..60}; do
            mysql -h 127.0.0.1 -u laravel -plaravel -e "SELECT 1" && break
            echo "Waiting for MySQL... ($i/60)"; sleep 2
          done

      - name: Migrate & seed
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          CACHE_DRIVER: redis
          SESSION_DRIVER: redis
          QUEUE_CONNECTION: redis
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
        run: php artisan migrate --seed --force

      - name: Run PHPUnit (with coverage)
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          CACHE_DRIVER: redis
          SESSION_DRIVER: redis
          QUEUE_CONNECTION: redis
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
        run: php artisan test --coverage-clover=coverage.xml

      - name: Generate Swagger (OpenAPI)
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan l5-swagger:generate

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.php }}
          path: coverage.xml

      - name: Upload Swagger JSON/HTML
        uses: actions/upload-artifact@v4
        with:
          name: swagger-docs-${{ matrix.php }}
          path: public/docs
